// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: goca/v1/cert.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 公私钥算法类型
type KeyType int32

const (
	KeyType_RSA   KeyType = 0
	KeyType_ECDSA KeyType = 1
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "RSA",
		1: "ECDSA",
	}
	KeyType_value = map[string]int32{
		"RSA":   0,
		"ECDSA": 1,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_goca_v1_cert_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_goca_v1_cert_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{0}
}

// 生成公私钥请求
type GenKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType  KeyType `protobuf:"varint,1,opt,name=key_type,json=keyType,proto3,enum=goca.v1.KeyType" json:"key_type,omitempty"`
	KeySize  int32   `protobuf:"varint,2,opt,name=key_size,json=keySize,proto3" json:"key_size,omitempty"`
	Password string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Common   string  `protobuf:"bytes,4,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GenKeyRequest) Reset() {
	*x = GenKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenKeyRequest) ProtoMessage() {}

func (x *GenKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenKeyRequest.ProtoReflect.Descriptor instead.
func (*GenKeyRequest) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{0}
}

func (x *GenKeyRequest) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_RSA
}

func (x *GenKeyRequest) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *GenKeyRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GenKeyRequest) GetCommon() string {
	if x != nil {
		return x.Common
	}
	return ""
}

// 生成公私钥响应
type GenKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyType    KeyType `protobuf:"varint,1,opt,name=key_type,json=keyType,proto3,enum=goca.v1.KeyType" json:"key_type,omitempty"`
	Common     string  `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
	PublicKey  string  `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrivateKey string  `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *GenKeyResponse) Reset() {
	*x = GenKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenKeyResponse) ProtoMessage() {}

func (x *GenKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenKeyResponse.ProtoReflect.Descriptor instead.
func (*GenKeyResponse) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{1}
}

func (x *GenKeyResponse) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_RSA
}

func (x *GenKeyResponse) GetCommon() string {
	if x != nil {
		return x.Common
	}
	return ""
}

func (x *GenKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GenKeyResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

// 生成CSR请求需要的参
type CSRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common           string   `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Country          string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Province         string   `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	Locality         string   `protobuf:"bytes,4,opt,name=locality,proto3" json:"locality,omitempty"`
	Organization     string   `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationUnit string   `protobuf:"bytes,6,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	Email            string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Dns              []string `protobuf:"bytes,8,rep,name=dns,proto3" json:"dns,omitempty"`
	Ip               []string `protobuf:"bytes,9,rep,name=ip,proto3" json:"ip,omitempty"`
	Password         string   `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	CaCommon         string   `protobuf:"bytes,11,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
}

func (x *CSRRequest) Reset() {
	*x = CSRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRRequest) ProtoMessage() {}

func (x *CSRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRRequest.ProtoReflect.Descriptor instead.
func (*CSRRequest) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{2}
}

func (x *CSRRequest) GetCommon() string {
	if x != nil {
		return x.Common
	}
	return ""
}

func (x *CSRRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CSRRequest) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CSRRequest) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *CSRRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *CSRRequest) GetOrganizationUnit() string {
	if x != nil {
		return x.OrganizationUnit
	}
	return ""
}

func (x *CSRRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CSRRequest) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *CSRRequest) GetIp() []string {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *CSRRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CSRRequest) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

type CSRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csr      string `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	CaCommon string `protobuf:"bytes,2,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
}

func (x *CSRResponse) Reset() {
	*x = CSRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSRResponse) ProtoMessage() {}

func (x *CSRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSRResponse.ProtoReflect.Descriptor instead.
func (*CSRResponse) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{3}
}

func (x *CSRResponse) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *CSRResponse) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

type CASignCSRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCommon string `protobuf:"bytes,1,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
	Csr      string `protobuf:"bytes,2,opt,name=csr,proto3" json:"csr,omitempty"`
	Days     int32  `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *CASignCSRRequest) Reset() {
	*x = CASignCSRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASignCSRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASignCSRRequest) ProtoMessage() {}

func (x *CASignCSRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASignCSRRequest.ProtoReflect.Descriptor instead.
func (*CASignCSRRequest) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{4}
}

func (x *CASignCSRRequest) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

func (x *CASignCSRRequest) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *CASignCSRRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type CASignCSRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCommon     string `protobuf:"bytes,1,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Cert         string `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *CASignCSRResponse) Reset() {
	*x = CASignCSRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASignCSRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASignCSRResponse) ProtoMessage() {}

func (x *CASignCSRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASignCSRResponse.ProtoReflect.Descriptor instead.
func (*CASignCSRResponse) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{5}
}

func (x *CASignCSRResponse) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

func (x *CASignCSRResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CASignCSRResponse) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

type RevokeCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCommon     string `protobuf:"bytes,1,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Reason       string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	ReasonText   string `protobuf:"bytes,4,opt,name=reason_text,json=reasonText,proto3" json:"reason_text,omitempty"`
}

func (x *RevokeCertRequest) Reset() {
	*x = RevokeCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCertRequest) ProtoMessage() {}

func (x *RevokeCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCertRequest.ProtoReflect.Descriptor instead.
func (*RevokeCertRequest) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{6}
}

func (x *RevokeCertRequest) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

func (x *RevokeCertRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *RevokeCertRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RevokeCertRequest) GetReasonText() string {
	if x != nil {
		return x.ReasonText
	}
	return ""
}

type RevokeCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCommon string `protobuf:"bytes,1,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
	Crl      string `protobuf:"bytes,2,opt,name=crl,proto3" json:"crl,omitempty"`
}

func (x *RevokeCertResponse) Reset() {
	*x = RevokeCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCertResponse) ProtoMessage() {}

func (x *RevokeCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCertResponse.ProtoReflect.Descriptor instead.
func (*RevokeCertResponse) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{7}
}

func (x *RevokeCertResponse) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

func (x *RevokeCertResponse) GetCrl() string {
	if x != nil {
		return x.Crl
	}
	return ""
}

type CertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Common       string `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CertRequest) Reset() {
	*x = CertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertRequest) ProtoMessage() {}

func (x *CertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertRequest.ProtoReflect.Descriptor instead.
func (*CertRequest) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{8}
}

func (x *CertRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *CertRequest) GetCommon() string {
	if x != nil {
		return x.Common
	}
	return ""
}

type CertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *CertResponse) Reset() {
	*x = CertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertResponse) ProtoMessage() {}

func (x *CertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertResponse.ProtoReflect.Descriptor instead.
func (*CertResponse) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{9}
}

func (x *CertResponse) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

type PKCS12Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCommon      string         `protobuf:"bytes,1,opt,name=ca_common,json=caCommon,proto3" json:"ca_common,omitempty"`
	GenKeyRequest *GenKeyRequest `protobuf:"bytes,2,opt,name=gen_key_request,json=genKeyRequest,proto3" json:"gen_key_request,omitempty"`
	CsrRequest    *CSRRequest    `protobuf:"bytes,3,opt,name=csr_request,json=csrRequest,proto3" json:"csr_request,omitempty"`
	Days          int32          `protobuf:"varint,4,opt,name=days,proto3" json:"days,omitempty"`
}

func (x *PKCS12Request) Reset() {
	*x = PKCS12Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKCS12Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKCS12Request) ProtoMessage() {}

func (x *PKCS12Request) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKCS12Request.ProtoReflect.Descriptor instead.
func (*PKCS12Request) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{10}
}

func (x *PKCS12Request) GetCaCommon() string {
	if x != nil {
		return x.CaCommon
	}
	return ""
}

func (x *PKCS12Request) GetGenKeyRequest() *GenKeyRequest {
	if x != nil {
		return x.GenKeyRequest
	}
	return nil
}

func (x *PKCS12Request) GetCsrRequest() *CSRRequest {
	if x != nil {
		return x.CsrRequest
	}
	return nil
}

func (x *PKCS12Request) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type PKCS12Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pkcs12 string `protobuf:"bytes,1,opt,name=pkcs12,proto3" json:"pkcs12,omitempty"`
}

func (x *PKCS12Response) Reset() {
	*x = PKCS12Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goca_v1_cert_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKCS12Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKCS12Response) ProtoMessage() {}

func (x *PKCS12Response) ProtoReflect() protoreflect.Message {
	mi := &file_goca_v1_cert_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKCS12Response.ProtoReflect.Descriptor instead.
func (*PKCS12Response) Descriptor() ([]byte, []int) {
	return file_goca_v1_cert_proto_rawDescGZIP(), []int{11}
}

func (x *PKCS12Response) GetPkcs12() string {
	if x != nil {
		return x.Pkcs12
	}
	return ""
}

var File_goca_v1_cert_proto protoreflect.FileDescriptor

var file_goca_v1_cert_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x6f, 0x63, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0d,
	0x47, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x22, 0xb8, 0x02, 0x0a, 0x0a, 0x43, 0x53, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x0b,
	0x43, 0x53, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x73, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x10, 0x43, 0x41,
	0x53, 0x69, 0x67, 0x6e, 0x43, 0x53, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x73, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x22, 0x69, 0x0a, 0x11, 0x43, 0x41, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x53, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x8e, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x22, 0x43, 0x0a,
	0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x22,
	0x0a, 0x0c, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65,
	0x72, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x50, 0x4b, 0x43, 0x53, 0x31, 0x32, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x63,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x73, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x53, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x73, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x50,
	0x4b, 0x43, 0x53, 0x31, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6b, 0x63, 0x73, 0x31, 0x32, 0x2a, 0x1d, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x41, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x43, 0x44,
	0x53, 0x41, 0x10, 0x01, 0x32, 0xb3, 0x04, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x55, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x67, 0x65,
	0x6e, 0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x03, 0x43, 0x53, 0x52, 0x12, 0x13, 0x2e, 0x67, 0x6f,
	0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x53, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x53, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01,
	0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x63, 0x73, 0x72, 0x12,
	0x51, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x63,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x7b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x7d, 0x12, 0x61, 0x0a, 0x09, 0x43, 0x41, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x53, 0x52, 0x12,
	0x19, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x53, 0x69, 0x67, 0x6e,
	0x43, 0x53, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x63,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x53, 0x69, 0x67, 0x6e, 0x43, 0x53, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01,
	0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x63, 0x61, 0x73, 0x69,
	0x67, 0x6e, 0x63, 0x73, 0x72, 0x12, 0x7c, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43,
	0x65, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x5a, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x65, 0x72, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x63, 0x65, 0x72, 0x74, 0x22, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x63,
	0x65, 0x72, 0x74, 0x12, 0x55, 0x0a, 0x06, 0x50, 0x4b, 0x43, 0x53, 0x31, 0x32, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4b, 0x43, 0x53, 0x31, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x4b, 0x43, 0x53, 0x31, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x65, 0x72, 0x74, 0x2f, 0x70, 0x6b, 0x63, 0x73, 0x31, 0x32, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x67, 0x62, 0x69, 0x6e,
	0x39, 0x32, 0x2f, 0x67, 0x6f, 0x63, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x63, 0x61,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goca_v1_cert_proto_rawDescOnce sync.Once
	file_goca_v1_cert_proto_rawDescData = file_goca_v1_cert_proto_rawDesc
)

func file_goca_v1_cert_proto_rawDescGZIP() []byte {
	file_goca_v1_cert_proto_rawDescOnce.Do(func() {
		file_goca_v1_cert_proto_rawDescData = protoimpl.X.CompressGZIP(file_goca_v1_cert_proto_rawDescData)
	})
	return file_goca_v1_cert_proto_rawDescData
}

var file_goca_v1_cert_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goca_v1_cert_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_goca_v1_cert_proto_goTypes = []interface{}{
	(KeyType)(0),               // 0: goca.v1.KeyType
	(*GenKeyRequest)(nil),      // 1: goca.v1.GenKeyRequest
	(*GenKeyResponse)(nil),     // 2: goca.v1.GenKeyResponse
	(*CSRRequest)(nil),         // 3: goca.v1.CSRRequest
	(*CSRResponse)(nil),        // 4: goca.v1.CSRResponse
	(*CASignCSRRequest)(nil),   // 5: goca.v1.CASignCSRRequest
	(*CASignCSRResponse)(nil),  // 6: goca.v1.CASignCSRResponse
	(*RevokeCertRequest)(nil),  // 7: goca.v1.RevokeCertRequest
	(*RevokeCertResponse)(nil), // 8: goca.v1.RevokeCertResponse
	(*CertRequest)(nil),        // 9: goca.v1.CertRequest
	(*CertResponse)(nil),       // 10: goca.v1.CertResponse
	(*PKCS12Request)(nil),      // 11: goca.v1.PKCS12Request
	(*PKCS12Response)(nil),     // 12: goca.v1.PKCS12Response
}
var file_goca_v1_cert_proto_depIdxs = []int32{
	0,  // 0: goca.v1.GenKeyRequest.key_type:type_name -> goca.v1.KeyType
	0,  // 1: goca.v1.GenKeyResponse.key_type:type_name -> goca.v1.KeyType
	1,  // 2: goca.v1.PKCS12Request.gen_key_request:type_name -> goca.v1.GenKeyRequest
	3,  // 3: goca.v1.PKCS12Request.csr_request:type_name -> goca.v1.CSRRequest
	1,  // 4: goca.v1.Cert.GenKey:input_type -> goca.v1.GenKeyRequest
	3,  // 5: goca.v1.Cert.CSR:input_type -> goca.v1.CSRRequest
	9,  // 6: goca.v1.Cert.GetCert:input_type -> goca.v1.CertRequest
	5,  // 7: goca.v1.Cert.CASignCSR:input_type -> goca.v1.CASignCSRRequest
	7,  // 8: goca.v1.Cert.RevokeCert:input_type -> goca.v1.RevokeCertRequest
	11, // 9: goca.v1.Cert.PKCS12:input_type -> goca.v1.PKCS12Request
	2,  // 10: goca.v1.Cert.GenKey:output_type -> goca.v1.GenKeyResponse
	4,  // 11: goca.v1.Cert.CSR:output_type -> goca.v1.CSRResponse
	10, // 12: goca.v1.Cert.GetCert:output_type -> goca.v1.CertResponse
	6,  // 13: goca.v1.Cert.CASignCSR:output_type -> goca.v1.CASignCSRResponse
	8,  // 14: goca.v1.Cert.RevokeCert:output_type -> goca.v1.RevokeCertResponse
	12, // 15: goca.v1.Cert.PKCS12:output_type -> goca.v1.PKCS12Response
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_goca_v1_cert_proto_init() }
func file_goca_v1_cert_proto_init() {
	if File_goca_v1_cert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goca_v1_cert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASignCSRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASignCSRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKCS12Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goca_v1_cert_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKCS12Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goca_v1_cert_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goca_v1_cert_proto_goTypes,
		DependencyIndexes: file_goca_v1_cert_proto_depIdxs,
		EnumInfos:         file_goca_v1_cert_proto_enumTypes,
		MessageInfos:      file_goca_v1_cert_proto_msgTypes,
	}.Build()
	File_goca_v1_cert_proto = out.File
	file_goca_v1_cert_proto_rawDesc = nil
	file_goca_v1_cert_proto_goTypes = nil
	file_goca_v1_cert_proto_depIdxs = nil
}
